{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huong\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\sd_95_polo_store_fe\\\\src\\\\components\\\\Admin\\\\AdminList\\\\UpdateRole\\\\UpdateRole.js\",\n  _s = $RefreshSig$();\nimport { Button, Form, Input } from \"antd\";\nimport { roleService } from \"../../../../service/admin\";\nimport { toastService } from \"../../../../service/common\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useNavigate } from \"react-router-dom\";\nimport XRegExp from \"xregexp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateRole = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const navigate = useNavigate();\n  const [role, setRole] = useState({});\n  const [form] = Form.useForm();\n  const validateInput = (rule, value, callback) => {\n    const regex = XRegExp(\"^[\\\\p{L}0-9\\\\s^%/().,]+$\");\n    const maxLength = 200;\n    if (value && value.length > maxLength) {\n      callback(`Không vượt quá ${maxLength} kí tự`);\n    } else if (value && !regex.test(value)) {\n      callback(\"Không chứa ký tự đặc biệt\");\n    } else {\n      callback();\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      const body = await roleService.getOne(id);\n      setRole(body.data);\n      console.log(body.data);\n      form.setFieldsValue({\n        ...body.data\n      });\n    })();\n  }, []);\n  const updateHandle = async form => {\n    try {\n      const formData = {\n        id: id,\n        name: form.name\n      };\n      roleService.createColor(formData);\n      console.log(formData);\n      toastService.success(\"Cập nhật chức vụ thành công\");\n      navigate(\"/admin/role\");\n    } catch (error) {\n      console.log(error);\n      toastService.error(error.apiMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    onFinish: updateHandle,\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Name\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Tên không được trống\"\n      }, {\n        validator: validateInput\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"C\\u1EADp nh\\u1EADt ch\\u1EE9c v\\u1EE5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateRole, \"e7Bp8WnkPpGFw29lMwRTqziO/7Y=\", false, function () {\n  return [useParams, useNavigate, Form.useForm];\n});\n_c = UpdateRole;\nexport { UpdateRole };\nvar _c;\n$RefreshReg$(_c, \"UpdateRole\");","map":{"version":3,"names":["Button","Form","Input","roleService","toastService","useEffect","useState","useParams","useNavigate","XRegExp","jsxDEV","_jsxDEV","UpdateRole","_s","id","console","log","navigate","role","setRole","form","useForm","validateInput","rule","value","callback","regex","maxLength","length","test","body","getOne","data","setFieldsValue","updateHandle","formData","name","createColor","success","error","apiMessage","onFinish","labelCol","span","wrapperCol","children","Item","label","rules","required","message","validator","fileName","_jsxFileName","lineNumber","columnNumber","offset","type","htmlType","_c","$RefreshReg$"],"sources":["C:/Users/huong/OneDrive/Máy tính/sd_95_polo_store_fe/src/components/Admin/AdminList/UpdateRole/UpdateRole.js"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport { roleService } from \"../../../../service/admin\";\r\nimport { toastService } from \"../../../../service/common\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport XRegExp from \"xregexp\";\r\nconst UpdateRole = () => {\r\n  const { id } = useParams();\r\n  console.log(id);\r\n  const navigate = useNavigate();\r\n  const [role, setRole] = useState({});\r\n  const [form] = Form.useForm();\r\n  const validateInput = (rule, value, callback) => {\r\n    const regex = XRegExp(\"^[\\\\p{L}0-9\\\\s^%/().,]+$\");\r\n    const maxLength = 200;\r\n\r\n    if (value && value.length > maxLength) {\r\n      callback(`Không vượt quá ${maxLength} kí tự`);\r\n    } else if (value && !regex.test(value)) {\r\n      callback(\"Không chứa ký tự đặc biệt\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      const body = await roleService.getOne(id);\r\n      setRole(body.data);\r\n      console.log(body.data);\r\n      form.setFieldsValue({\r\n        ...body.data,\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  const updateHandle = async (form) => {\r\n    try {\r\n      const formData = {\r\n        id: id,\r\n        name: form.name,\r\n     \r\n      };\r\n      roleService.createColor(formData);\r\n      console.log(formData);\r\n      toastService.success(\"Cập nhật chức vụ thành công\");\r\n      navigate(\"/admin/role\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      toastService.error(error.apiMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onFinish={updateHandle}\r\n      labelCol={{ span: 4 }}\r\n      wrapperCol={{ span: 8 }}\r\n    >\r\n      <Form.Item\r\n        label=\"Name\"\r\n        name=\"name\"\r\n        rules={[  { required: true, message: \"Tên không được trống\" },\r\n        { validator: validateInput },]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n   \r\n\r\n      <Form.Item wrapperCol={{ offset: 4 }}>\r\n        <button type=\"primary\" htmlType=\"submit\">\r\n          Cập nhật chức vụ\r\n        </button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport { UpdateRole };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}